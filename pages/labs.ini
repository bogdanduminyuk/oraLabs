[LAB1]
;1
task[] = ""
desc[] = "Вызовите iSQL*Plus. Идентификатор пользователя и пароль сообщит инструктор."

;2
task[] = "0"
desc[] = "Команды iSQL*Plus помогяют запрашивать данные. Да или нет?"

;3
task[] = "1"
desc[] = "Будет ли успешно выполнена эта команда SELECT?
<pre>SELECT last_name, job_id, salary AS Sal
FROM employees;</pre>"

;4
task[] = "0"
desc[] = "Будет ли успешно выполнена эта команда SELECT?
<pre>SELECT *
FROM job_grades;</pre>"

;5
task[] = "стр.1 - запятая, стр.2 - sal does not exist, x||*, стр.2 - ANNUAL SALARY"
desc[] = "Команда SELECT содержит 4 ошибки. Можете ли вы их указать?
<pre>SELECT employee_id, last_name
sal x 12 ANNUAL SALARY
FROM employees;</pre>"

;6
task[] = "Describe departments"
desc[] = "Покажите структуру таблицы DEPARTMENTS. Выберите все данные из таблицы DEPARTMENTS."

;7
task[] = "
select employee_id
,      last_name
,      job_id
,      hire_date
from employees"
desc[] = "Составьте запрос для вывода имени каждого служащего, должности, даты найма и номера. Номер служащего должен быть первым."

;8
task[] = "select employee_id
,      last_name
,      job_id
,      hire_date
from employees"
desc[] = "Выполните предыдущий запрос"

;9
task[] = "select distinct job_id from employees"
desc[] = "Составьте запрос для вывода неповторяющихся должностей из таблицы EMPLOYEES"

;10
task[] = "
select  employee_id as "Emp #"
,       last_name as "Employee"
,       job_id as "Job"
,       hire_date as "Hire Date"
from employees"
desc[] = "Измените запрос из задания 1.7 так, чтобы столбцы назывались Emp #, Employee, Job, Hire Date"

;11
task[] = "
select last_name || ', ' || job_id
from employees
"
desc[] = "Выведите на экран имя, соединенное с идентификатором должности через запятую и пробел. Назовите новый столбец Employee and Title"

;12
task[] = "
select 
	employee_id   	  || ','
	|| first_name 	  || ','
	|| last_name      || ','
	|| email      	  || ','
	|| phone_number   || ','
	|| hire_date 	  || ','
	|| job_id 	      || ','
	|| salary 	      || ','
	|| commission_pct || ','
	|| manager_id     || ','
	|| department_id  as THE_OUTPUT
from employees
"
desc[] = "Создайте запрос для вывода всех данных из таблицы EMPLOYEES. Разделите столбцы запятыми. Назовите столбец THE_OUTPUT."

[LAB2]

;1
task[] = "
select e.last_name
,      e.salary
from employees e
where e.salary > 12000
"
desc[] = "Создайте запрос для вывода имени и заработной платы служащих, зарабатывающих более $12000."

;2
task[] = "
select last_name
,      department_id
from  employees
where employee_id = 176
"
desc[] = "Создайте запрос для вывода фамилии и номера отдела служащего под номером 176"

;3
task[] = "
select last_name
,      salary
from employees
where salary between 5000 and 12000
"
desc[] = "Измените запрос из задания 2.1 и выведите фамилии и оклады всех служащих, чей оклад не входит в диапазон от $5000 до $12000."

;4
task[] = "
select last_name
,      job_id
,      hire_date
from employees
where hire_date between '20-02-1998' and '01-05-1998'
"
desc[] = "Выведите фамилию, идентификатор должности и дату начала работы всех служащих, нанятых в период с 20 февраля 1998 г. по 1 мая 1998 г. Отсортируйте данные в порядке возрастания даты найма."

;5
task[] = "
select last_name
,      department_id
from employees
where department_id = 20 or department_id = 50
"
desc[] = "Выведите фамилию и номер отдела всех служащих из отделов 20 и 50. Отсортируйте данные по фамилиям в алфавитном порядке."


;6
task[] = "
select last_name as "employee"
,      salary as "monthly salary"
from employees
where salary between 5000 and 12000
AND   (department_id = 20 or department_id = 50)
"
desc[] = "Измените запрос 2.3 для вывода фамилий и окладов служащих отделов 20 и 50, зарабатывающих от $5000 до $12000. Назовите столбцы Employee и Monthly Salary, соответственно."

;7
task[] = "
select last_name
,      to_char(hire_date, 'YYYY')
from employees
where to_char(hire_date, 'YYYY') = 1994
"
desc[] = "Выведите фамилию и дату найма всех служащих, нанятых в 1994 г."

;8
task[] = "
select last_name
,      job_id
from employees
where manager_id is null
"
desc[] = "Выведите фамилии и должности всех служащих, не имеющих менеджера."

;9
task[] = "
select last_name
,      salary
,      commission_pct
from employees
where commission_pct is not null
"
desc[] = "Выведите фамилию, оклад и комиссионные всех служащих, зарабатывающих комиссионные. Отсортируйте данные в порядке убывания окладов и комиссионных."

;10
task[] = "
select last_name
from employees
where last_name like '__a%'
"
desc[] = "Выведите все фамилии служащих, в которых третья буква - <i>а</i>"

;11
task[] = "
select last_name
from employees
where last_name like '%a%' 
and last_name like '%e%'
"
desc[] = "Выведите все фамилии служащих, в которых есть буквы <i>а</i> и <i>е</i>"

;12
task[] = "
select last_name
,      job_id
,      salary
from employees
where (job_id = 'SA_REP' or job_id = 'ST_CLERK')
AND salary not in(2000, 3500, 7000)
"
desc[] = "Запросите фамилии, должности и оклады всех служащих, работающих в должности торгового представителя (SA_REP) или клерка на складе (ST_CLERK) и с окладом не $2500, $3500 или $7000."

;13
task[] = "
select last_name as "employee"
,      salary as "monthly salary"
,      commission_pct
from employees
where commission_pct > 0.2
"
desc[] = "Измение запрос 2.6 так, чтобы получить фамилии, оклады и комиссионные всех служащих, у которых сумма комиссионных превышает оклад на 20%."

[LAB3]

;1
task[] = '
select sysdate as "Date"
from dual
'
desc[] = "Напишите запрос для вывода текущей даты. Назовите столбец Date."

;2
task[] = '
select employee_id
,      last_name
,      salary
,      ROUND(salary*1.15) "New Salary"
from employees
'
desc[] = "Выведите номер служащего, его фамилию, оклад и новый оклад, повышенный на 15% и округленный до целого. Назовите столбец New Salary."

;3
task[] = "

"
desc[] = "Выполните предыдущий запрос."

;4
task[] = '
select employee_id
,      last_name
,      salary
,      ROUND(salary*1.15) "New Salary"
,      ROUND(salary*1.15) - salary "Increase"
from employees
'
desc[] = "Измените запрос из задания 2. Добавьте еще один столбец, который будет содержать результат вычитания старого оклада из нового. Назовите столбец Inscrease."

;5
task[] = "
select first_name as Name
,      LENGTH(first_name) as Length
from employees
where last_name like 'J%'
      OR last_name like 'A%'
      OR last_name like 'M%'
"
desc[] = "Выведите фамилии служащих (первая буква каждой фамилии должна быть заглавной, а остальные строчными) и длину каждой фамилии для тех служащих, фамилия которых начинается с символа J, A или M. Присвойте соответствующие заголовки столбцам."

;6
task[] = "
select last_name
,      round(months_between(sysdate, hire_date)) as month_worked
from employees
order by month_worked
"
desc[] = "Для каждого служащего выведите фамилию и вычислите количество месяцев со дня найма до настоящего времени, округленное до ближайшего целого. Назовите столбец MONTH_WORKED. Результаты отсортируйте по количеству отработанных месяцев. Округлите число месяцев до ближайшего целого."

;7
task[] = "
select last_name || ' earns ' || 
       to_char(salary, '$99999.99') || ' monthly but wants ' ||
       to_char(salary * 3, '$99999.99') as "Dream_Salaries"
from employees
"
desc[] = "Получите по каждому служащему отчет в следующем виде: <i>'Фамилия' зарабатывает 'оклад' в месяц, но желает 'утроенный оклад'</i>"

;8
task[] = "
select last_name
,      lpad(salary, 15, '$')
from employees
"
desc[] = "Напишите запрос для вывода фамилий и окладов всех служащих. Назовите выходной столбец SALARY (15 символов с заполнением символом $)"

;9
task[] = "
select last_name
,      hire_date
,      to_char(next_day(add_months(hire_date,6),1),
              'fmday, "the" ddsp "of" Month, yyyy') as review
from employees
"
desc[] = "Для каждого служащего выведите фамилию, дату найма и дату пересмотра зарплаты, которая приходится на первый понедельник после шести месяцев работы. Назовите столбец REVIEW. Формат даты на выводе - как <b>Monday, the Thirty-First of July, 2000.</b>"

;10
task[] = "
select last_name
,      hire_date
,      to_char(hire_date, 'DAY') as DAY
from employees
order by to_char(hire_date, 'D')
"
desc[] = "По каждому служащему выведите фамилию, дату найма и день недели, когда он был нанят на работу. Назовите последний столбец DAY. Отсортируйте результаты по дням недели, начиная с понедельника."

;11
task[] = "
select last_name
,      nvl2(to_char(commission_pct), to_char(commission_pct), 'No Comission') as COMM
from employees
order by commission_pct
"
desc[] = "Напишите запрос для вывода фамилии и суммы комиссионных каждого служащего. Если служащий не зарабатывает комиссионные, укажите в столбце <i>No Commission</i>. Назовите столбец COMM."

;12
task[] = "
SELECT  RPAD(last_name || ' ',ROUND(LENGTH(last_name) + (salary/1000)) + 1,'*') AS SAL,
	round(salary/1000) AS EMPLOYEES_AND_THEIR_SALERIES
FROM  employees
"
desc[] = "Напишите запрос для отображения фамилий сотрудников и величину их заработной платы в виде гистограммы, состоящей из звездочек. Каждая звездочка означает 1000$. Строки должны быть отсортированы по заработной плате в убывающем порядке. Результат должен быть выведен одним столбцов, озаглавленным, как EMPLOYEES_AND_THEIR_SALERIES."

;13
task[] = "
SELECT  job_id,
	DECODE(job_id,
		'AD_PRES','A',
		'ST_MAN', 'B',
		'IT_PROG','C',
		'SA_REP','D',
		'ST_CLERK','E',
		q'['0']'		
	) AS G
FROM  employees
"
desc[] = "Используя функцию DECODE, напишите запрос для отображени должности сотрудника и ее разряда. Разряд каждого типа должности JOB_ID приведен в таблице: <table style='padding: 3px 7px;' border='1'>
<tr><th>Должность</th><th>Разряд</th></tr>
<tr><td>AD_PRES</td><td>A</td></tr>
<tr><td>ST_MAN</td><td>B</td></tr>
<tr><td>IT_PROG</td><td>C</td></tr>
<tr><td>SA_REP</td><td>D</td></tr>
<tr><td>ST_CLERK</td><td>E</td></tr>
<tr><td>Другая</td><td>0</td></tr>
</table>"

;14
task[] = "
SELECT  job_id,
	case job_id WHEN 'AD_PRES'    THEN 'A'
		    WHEN 'ST_MAN'   THEN 'B'
		    WHEN 'IT_PROG'  THEN 'C'
		    WHEN 'SA_REP'   THEN 'D'
		    WHEN 'ST_CLERK' THEN 'E'
	ELSE
	    q'['0']' 
	END AS G
FROM  employees
"
desc[] = "Перепишите команду из предыдущего задания, используя синтаксис выражения CASE."

[LAB4]

;1
task[] = "Да"
desc[] = "Групповые функции применяются к большому количеству строк для получения одного результата. Да/Нет?"

;2
task[] = "Только у count()"
desc[] = "При вычислении групповых функций включаются неопределенные значения. Да/Нет?"

;3
task[] = "Нет"
desc[] = "Предложение WHERE ограничивает количество выбираемых строк до того, как они обрабатываются групповыми функциями. Да/Нет?"

;4
task[] = "
SELECT  MAX(salary) AS "MAXIMUM"
,       MIN(salary) AS "MINIMUM"
,       SUM(salary) AS "SUMMA"
,       ROUND(AVG(salary)) AS "AVERAGE"
FROM employees
"
desc[] = "Напишите запрос для вывода самого высокого, самого низкого и среднего оклада по всем служащим, а также суммы всех окладов. Назовите столбцы Maximum, Minimum, Average и Sum. Округлите суммы до ближайшего целого."

;5
task[] = "
SELECT  job_id,
    MAX(salary) AS "MAXIMUM",
    MIN(salary) AS "MINIMUM",
    SUM(salary) AS "SUMMA",
    ROUND(AVG(salary)) AS "AVERAGE"
FROM employees
GROUP BY job_id
"
desc[] = "Измение запрос из задания 4.4 так, чтобы получить самый низкий, самый высокий и средний оклады, а также сумму окладов отдельно по каждой должности."

;6
task[] = "
SELECT  job_id
,       COUNT(last_name)
FROM employees
GROUP BY job_id
"
desc[] = "Напишите запрос для вывода должности и количества служащих, занимающих каждую должность."

;7
task[] = "
SELECT  manager_id
,		COUNT(*) AS Number_of_Managers
FROM employees
GROUP BY manager_id
"
desc[] = "Получите количество служащих, имеющих подчиненных, без их перечисления. Назовите столбец Number of Managers. <strong>Подсказка:</strong> используйте столбец MANAGER_ID для определения числа менеджеров."

;8
task[] = "
SELECT  MAX(salary) - MIN(salary) AS DIFFERENCE
FROM employees
"
desc[] = "Напишите запрос для вывода разности между самым высоким и самым низким окладами. Назовите столбец DIFFERENCE."

;9
task[] = "
SELECT  manager_id
,       MAX(salary)
,       MIN(salary)
FROM employees
GROUP BY manager_id
HAVING MIN(salary)>6000 AND manager_id IS NOT NULL
ORDER BY manager_id
"
desc[] = "Напишите запрос для вывода номера каждого менеджера, имеющего подчиненных, и заработную плату самого низкооплачиваемого из его подчиненныхю Исключите менеджеров, чей номер неизвестен. Исключите все группы, где минимальный оклад составляет менее $6000. Отсортируйте выходные строки в порядке убывания оклада."

;10
task[] = "
SELECT  d.department_name AS NAME
,       l.location_id AS Location
,       COUNT(e.last_name) AS Num_of_people
,       ROUND(AVG(e.salary),0) AS SALARY
FROM employees e LEFT OUTER JOIN departments d
	ON (e.department_id = d.department_id )
	LEFT OUTER JOIN locations l
	ON (d.location_id = l.location_id)
GROUP BY d.department_name,l.location_id
ORDER BY d.department_name
"
desc[] = "Напишите запрос для вывода названия отдела, местоположения отдела, количества служащих и среднего оклада по этому отделу. Назовите столбцы Name, Location, Number of People и Salary. Округлите средний оклад до ближайшего целого значения."

;11
task[] = "
SELECT COUNT(employee_id) as total 
,      SUM(DECODE(TO_NUMBER(TO_CHAR(hire_date,'YYYY')),2000,1)) y2000
,      SUM(DECODE(TO_NUMBER(TO_CHAR(hire_date,'YYYY')),2001,1)) y2001 
,      SUM(DECODE(TO_NUMBER(TO_CHAR(hire_date,'YYYY')),2002,1)) y2002 
,      SUM(DECODE(TO_NUMBER(TO_CHAR(hire_date,'YYYY')),2003,1)) y2003
FROM employees 
"
desc[] = "Напишите запрос для вывода общего количества служащих, а в их числе - количеств служащих, нанятых в 1995, 1996, 1997 и 1998 г. Дайте соответствующие заголовки столбцам."

;12
task[] = "
SELECT DISTINCT job_id 
, DECODE(department_id,20,MAX(salary)) d20 
, DECODE(department_id,50,MAX(salary)) d50 
, DECODE(department_id,80,MAX(salary)) d80 
, DECODE(department_id,90,MAX(salary)) d90
, SUM(salary) as total 
FROM employees 
GROUP BY job_id, department_id 
ORDER BY job_id
"
desc[] = "Напишите матричный запрос для вывода всех должностей и суммы заработной платы служащих, работающих в этой должности в отделах 20, 50, 80 и 90. Последний столбец дложен содержать сумму заработной платы служащих <i>этих</i> отделов, занимающих каждую конкретную должность. Дайте столбцам соответствующие заголовки."


[LAB5]
;1
task[] = "
SELECT emp.last_name 
,      emp.department_id 
,      dep.department_name 
from employees emp join departments dep 
on (emp.department_id = dep.department_id) 
order by department_id 
"
;2
task[] = "
SELECT distinct job_id 
,      location_id 
from  employees join departments 
using (department_id) 
where department_id = 80 
"
;3
task[] = "
SELECT distinct emp.last_name 
,      dep.department_name 
,      loc.location_id 
,      loc.city 
from  employees emp 
join  departments dep 
on    emp.department_id = dep.department_id 
join  locations loc 
on    dep.location_id = loc.location_id 
where commission_pct is not null 
"
;4
task[] = "
SELECT emp.last_name 
,      dep.department_name 
from  employees emp 
join  departments dep 
using (department_id) 
where last_name like '%a%' 
"
;5
task[] = "
SELECT emp.last_name 
,      emp.job_id 
,      emp.department_id 
,      dep.department_name 
from  employees emp 
join  departments dep 
on    emp.department_id = dep.department_id 
join  locations loc 
on    dep.location_id = loc.location_id 
where city = 'Toronto' 
"
;6
task[] = "
select emp.last_name as EMPLOYEE 
,      emp.employee_id as Emp# 
,      emp2.last_name as Manager 
,      emp2.employee_id as Mgr# 
from  employees emp 
left  join employees emp2 
on    (emp.manager_id = emp2.employee_id) 
order by emp2.employee_id 
"
;7
task[] = "
select emp.last_name as EMPLOYEE 
,      emp.employee_id as Emp# 
,      emp2.last_name as Manager 
,      emp2.employee_id as Mgr# 
from  employees emp 
left  join employees emp2 
on    (emp.manager_id = emp2.employee_id) 
order by emp2.employee_id
"
;8
task[] = "
select emp.department_id 
,      emp.last_name 
,      emp2.last_name 
from  employees emp 
join  employees emp2 
on    (emp.department_id = emp2.department_id) 
where emp.employee_id != emp2.employee_id 
order by emp.department_id
"
;9
task[] = ""
;10
task[] = "
select emp.last_name 
,      emp.hire_date 
from  employees emp 
join  employees emp2 
on    (emp.hire_date > emp2.hire_date) 
where emp2.last_name = 'Davies' 
order by hire_date
"
;11
task[] = "
select emp.last_name as Employee 
,      emp.hire_date as Emp_Hired
,      emp2.last_name as Manager 
,      emp2.hire_date as ManagerHired 
from employees emp 
join employees emp2 
on (emp.manager_id = emp2.employee_id) 
where emp.hire_date < emp2.hire_date 
"


[LAB6]
;1
task[] = "
SELECT last_name 
,      department_id 
,      hire_date 
FROM employees 
WHERE department_id =  ( 
                    select department_id 
                    from employees 
                    where last_name = 'Zlotkey' 
                ) 
and last_name <> 'Zlotkey' 
"
;2
task[] = "
SELECT employee_id 
,      last_name 
,      salary 
FROM employees 
WHERE salary > ( 
                select avg(salary) 
                from employees 
            ) 
order by salary desc 
"
;3
task[] = "
SELECT employee_id 
,      last_name 
FROM employees 
WHERE department_id in  ( 
                    select department_id 
                    from employees 
                    where lower(last_name) like '%u%' 
                 ) 
"
;4
task[] = "
SELECT last_name 
,      department_id 
,      job_id 
FROM employees 
WHERE department_id = any( 
                    select department_id 
                    from departments 
                    where location_id = 1700 
                ) 
"
;5
task[] = "
select last_name 
,      salary 
from employees 
where manager_id in ( 
                    select employee_id 
                    from employees 
                    where last_name ='King' 
                ) 
"
;6
task[] = "
select department_id 
,      last_name 
,      job_id 
from employees 
where department_id = ( 
                    select department_id 
                    from departments 
                    where department_name = 'Executive' 
                ) 
"
;7
task[] = "
SELECT employee_id 
,      last_name
,      salary
FROM employees 
WHERE department_id in ( 
                    select department_id 
                    from employees 
                    where last_name like '%u%' 
                ) 
AND   salary > ( 
              select avg(salary) 
              from employees 
          )
"

[LAB7]
;1
task[] = "
SELECT department_id
FROM departments
MINUS
SELECT department_id
FROM employees
WHERE job_id LIKE 'ST_CLERK'
"

;2
task[] = "
SELECT country_id "CO"
,      country_name
FROM countries
MINUS
SELECT l.country_id
,      con.country_name
FROM locations l JOIN countries con
     ON l.country_id = con.country_id
JOIN departments d
     ON d.location_id = l.location_id
"

;3
task[] = "
SELECT job_id
,      department_id
,      1 QUERY_NUM
FROM employees
WHERE department_id = 10
UNION 
SELECT job_id
,      department_id
,      2 QUERY_NUM
FROM employees
WHERE department_id = 50
UNION
SELECT job_id
,      department_id
,      3 QUERY_NUM
FROM employees
WHERE department_id = 20
ORDER BY 3
"

;4
task[] = "
SELECT employee_id, job_id
FROM employees
INTERSECT 
SELECT employee_id, job_id
FROM job_history
"

;5
task[] = "
SELECT e.last_name
,      e.department_id
,      TO_CHAR(NULL) department_name
FROM employees e LEFT JOIN departments d
     ON (d.department_id = e.department_id)
UNION
SELECT TO_CHAR(NULL)
,      department_id
,      department_name
FROM departments
"

[LAB8]
;1
task[] = "
create table emp (
    id         number(4)    not null
,   last_name  varchar2(25)
,   first_name varchar2(25)
,   userid     varchar2(8)
,   salary     number(9,2)
)
"

;2
task[] = "
desc emp
"
;3
task[] = "
insert into emp
values(1, 'Patel', 'Ralph', 'rpatel', 895)
"
;4
task[] = "
insert into emp(id, last_name, first_name, userid, salary)
values(1, 'Patel', 'Ralph', 'rpatel', 895)
"

;5
task[] = "
select * from emp
"

;6
task[] = "
insert into emp 
    (id
     ,last_name
     ,first_name
     ,userid
     ,salary
    )
values
    (&id
     ,'&&LAST_NAME'
     ,'&&FIRST_NAME'
     ,substr('&FIRST_NAME',1,1) || substr('&LAST_NAME',1,7)
     ,&SALARY
    )
"

;7
task[] = ""

;8
task[] = "
select * from emp
"

;9
task[] = "
commit
"

;10
task[] = "
update emp
set last_name='Drexler'
where id=3;
"

;11
task[] = "

"

;12
task[] = "
update emp
set salary=1000
where salary<900
"

;13
task[] = "
delete 	emp
where 	first_name = 'Betty'
and	last_name = 'Dancs'
"

;14
task[] = "
select * from emp
"

;15
task[] = "
commit
"

;16
task[] = "
insert into emp 
    (id
     ,last_name
     ,first_name
     ,userid
     ,salary
    )
values
    (&id
     ,'&&LAST_NAME'
     ,'&&FIRST_NAME'
     ,substr('&FIRST_NAME',1,1) || substr('&LAST_NAME',1,7)
     ,&SALARY
    )
"

;17
task[] = "
select * from emp
"

;18
task[] = "
SAVEPOINT A
"

;19
task[] = "
DELETE emp
"

;20
task[] = "
select * from emp
"

;21
task[] = "
rollback to savepoint a
"
;22
task[] = "
select * from emp
"

[LAB9]
;1
task[] = "
create table DEPT (
	id NUMBER(7),
	Name varchar(25)
)

desc DEPT
"

;2
task[] = "
insert into dept
select department_id
,      department_name
from departments
"

;3
task[] = "
create table emp(
   id NUMBER(7),
   last_name VARCHAR(25),
   first_name VARCHAR(25),
   DEPT_ID NUMBER(7)
)

desc emp
"

;4
task[] = "
alter table emp
modify last_name VARCHAR(50)

desc emp
"

;5
task[] = "
select * from USER_TABLES
where table_name in ('DEPT', 'EMP');
"

;6
task[] = "
create table employee2 as
select employee_id as ID
,      first_name
,      last_name
,      salary
,      department_id as DEPT_ID
from employees
"

;7
task[] = "
drop table emp
"

;8
task[] = "
rename employee2 to emp
"

;9
task[] = ""

;10
task[] = "
alter table emp
drop column first_name;

desc emp
"

;11
task[] = "
alter table emp
set unused (dept_id)
"

;12
task[] = "
alter table emp
drop unused columns;
"

[LAB10]
;1
task[]="
alter table emp add
constraint my_emp_id_pk PRIMARY KEY (id)
"

;2
task[]="
alter table dept add
constraint my_dept_id_pk PRIMARY KEY (id)
"

;3
task[]="alter table emp add 
constraint my_emp_dept_id_fk FOREIGN KEY (dept_id)
REFERENCES dept(id)
"

;4
task[]="
select constraint_name
,      constraint_type
from user_constraints 
where table_name in ('DEPT', 'EMP')
"

;5
task[]="
select object_name
,      object_type
from user_objects
where object_name like '%EMP%'
or    object_name like '%DEPT%'
"

;6
task[]="
alter table emp add
commission number(2,2)
constraint my_comm_pct check (commission > 0)
"

[LAB11]
;1
task[] = "

"

;2
task[] = "

"

;3
task[] = "

"

;4
task[] = "

"

;6
task[] = "

"

;7
task[] = "

"

;8
task[] = "

"

